{"version":3,"sources":["webpack:///./src/views/Posts/style.ts","webpack:///./src/views/Posts/index.tsx"],"names":["Actions","styled","div","PageHeading","Heading","props","theme","spacing","md","PageTitle","Title","palette","text","primary","PageCount","sm","pageQuery","Posts","data","pageContext","t","useTranslation","posts","safe","allMdx","edges","SEO","title","currentPage","numPages","GridList","map","post","Card","first","key","node","id","to"],"mappings":"gLAGaA,EAAUC,IAAOC,IAAV,iEAAGD,CAAH,mCAKPE,EAAcF,YAAOG,KAAV,qEAAGH,CAAH,4EAIJ,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,MAGpCC,EAAYR,YAAOS,KAAV,mEAAGT,CAAH,2BACX,SAAAI,GAAK,OAAIA,EAAMC,MAAMK,QAAQC,KAAKC,WAIhCC,EAAYb,IAAOC,IAAV,mEAAGD,CAAH,uFAGH,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,QAAQQ,MAErC,SAAAV,GAAK,OAAIA,EAAMC,MAAMK,QAAQC,KAAKC,W,QCxB7C,0CAkBA,IA6CaG,EAAY,aA4CVC,UAzFsB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACpCC,EAAMC,YAAe,SAArBD,EACFE,EAAQC,YAAKL,EAAKM,OAAOC,OAC/B,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,MAAO,UACZ,kBAAC,IAAD,KACE,kBAACxB,EAAD,KACE,kBAACM,EAAD,KAAYW,EAAE,UACd,kBAACN,EAAD,KACGM,EAAE,QADL,IACeD,EAAYS,YAD3B,MAC2CT,EAAYU,WAGzD,kBAACC,EAAA,EAAD,KACGR,EAAMS,KAAI,SAAAC,GAAI,OACb,kBAACC,EAAA,EAAD,CAAMC,OAAO,EAAOC,IAAKH,EAAKI,KAAKC,GAAInB,KAAMc,QAGjD,kBAAChC,EAAD,KACGmB,EAAYS,YAAc,GACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEU,GACEnB,EAAYS,YAAc,GAAM,EAAhC,oBAEcT,EAAYS,YAAc,IAJ5C,KAOWR,EAAE,cAIhBD,EAAYS,YAAcT,EAAYU,UACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaS,GAAE,WAAYnB,EAAYS,YAAc,IAClDR,EAAE,QADL","file":"component---src-views-posts-index-tsx-2fda7c7c44b85ff6e995.js","sourcesContent":["import styled from \"styled-components\"\nimport { Heading, Title } from \"../../config/style/mdx\"\n\nexport const Actions = styled.div`\n  margin-top: auto;\n  display: flex;\n`\n\nexport const PageHeading = styled(Heading)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-bottom: ${props => props.theme.spacing.md};\n`\n\nexport const PageTitle = styled(Title)`\n  color: ${props => props.theme.palette.text.primary};\n  margin: 0px;\n`\n\nexport const PageCount = styled.div`\n  margin-left: auto;\n  margin-top: auto;\n  margin-bottom: ${props => props.theme.spacing.sm};\n  font-weight: lighter;\n  color: ${props => props.theme.palette.text.primary};\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Card from \"../../components/Card\"\nimport GridList from \"../../components/GridList\"\nimport { Content, Left, Right } from \"../../config/style/mdx\"\nimport { PostsQuery } from \"../../types/graphql-types\"\nimport safe from \"../../utils/safe\"\nimport SEO from \"../../utils/SEO\"\nimport { SeeMoreLink } from \"../Home/style\"\nimport { Actions, PageCount, PageHeading, PageTitle } from \"./style\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface IPostsProps {\n  data: PostsQuery\n  pageContext: {\n    currentPage: number\n    numPages: number\n  }\n}\nconst Posts: React.FC<IPostsProps> = ({ data, pageContext }) => {\n  const { t } = useTranslation(\"Posts\")\n  const posts = safe(data.allMdx.edges)\n  return (\n    <>\n      <SEO title={\"Posts\"} />\n      <Content>\n        <PageHeading>\n          <PageTitle>{t(\"posts\")}</PageTitle>\n          <PageCount>\n            {t(\"page\")} {pageContext.currentPage} / {pageContext.numPages}\n          </PageCount>\n        </PageHeading>\n        <GridList>\n          {posts.map(post => (\n            <Card first={false} key={post.node.id} data={post} />\n          ))}\n        </GridList>\n        <Actions>\n          {pageContext.currentPage > 1 && (\n            <Left>\n              <SeeMoreLink\n                to={\n                  pageContext.currentPage - 1 === 1\n                    ? `/posts`\n                    : `/posts/${pageContext.currentPage - 1}`\n                }\n              >\n                &laquo; {t(\"previous\")}\n              </SeeMoreLink>\n            </Left>\n          )}\n          {pageContext.currentPage < pageContext.numPages && (\n            <Right>\n              <SeeMoreLink to={`/posts/${pageContext.currentPage + 1}`}>\n                {t(\"next\")} &raquo;\n              </SeeMoreLink>\n            </Right>\n          )}\n        </Actions>\n      </Content>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query Posts($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { path: { eq: null } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            path\n            largeThumbnail: featuredImage {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 980, quality: 90, cropFocus: ENTROPY) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            thumbnail: featuredImage {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 500, quality: 90, cropFocus: ENTROPY) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Posts\n"],"sourceRoot":""}